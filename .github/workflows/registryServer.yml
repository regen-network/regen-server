name: registry-server

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: corepack enable
      - run: yarn
      - run: yarn run eslint .

  tests:
    runs-on: ubuntu-latest

    env:
      TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/regen_registry
      TEST_DATABASE_USER: postgres
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_REGION: ${{ secrets.AWS_BUCKET_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    strategy:
      matrix:
        node-version: [16.x]

    services:
      postgres:
        image: postgis/postgis:12-master
        env:
          POSTGRES_DB: regen_registry
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: corepack enable
      - run: yarn
      - run: yarn
      - name: 'prepare an empty test database'
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/regen_registry
          ROOT_DATABASE_URL: postgres://postgres:postgres@localhost/postgres
        run: yarn run graphile-migrate reset --erase
      - name: 'start the registry-server and run tests'
        env:
          MAILERLITE_API_KEY: foobar
          AIRTABLE_API_TOKEN: foobar
          AUTH0_DOMAIN: foobar
          AUTH0_CLIENT_ID: foobar
          AUTH0_CLIENT_SECRET: foobar
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/regen_registry
          CSRF_SECRET: foobar
          CSRF_COOKIE_NAME: __Host-regen-dev.x-csrf-token
        run: yarn build && yarn serve &
      - name: 'run tests after waiting a bit'
        run: yarn test
